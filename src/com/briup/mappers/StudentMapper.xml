<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- com.briup.mappers.StudentMapper是我们定 义接口的全限定名字 这样就可以使用接口调用映射的SQL语句了 这个名字一定要和接口对应上 -->
<mapper namespace="com.briup.mappers.StudentMapper">

	<resultMap type="Student" id="StudentResult">
		<id property="stuId" column="stud_id" />
		<result property="name" column="name" />
		<result property="email" column="email" />
		<result property="dob" column="dob" />
	</resultMap>

	<select id="findAllStudents" resultMap="StudentResult">
		SELECT * FROM STUDENTS
	</select>

	<!-- 列名和属性名字不一致可以给查询的列起一个别名 -->
	<!-- <select id="findStudentById" -->
	<!-- parameterType="int" -->
	<!-- resultType="Stu"> -->
	<!-- SELECT STUD_ID as stuId,NAME,EMAIL,DOB -->
	<!-- FROM STUDENTS -->
	<!-- WHERE STUD_ID=#{stuId} -->
	<!-- </select> -->


	<!-- <insert id="insertStudent" -->
	<!-- parameterType="Stu"> -->
	<!-- INSERT INTO -->
	<!-- STUDENTS(STUD_ID,NAME,EMAIL,DOB) -->
	<!-- VALUES(#{stuId},#{name},#{email},#{dob}) -->
	<!-- </insert> -->

	<!-- <update id="updateStudentById" -->
	<!-- parameterType="Stu"> -->
	<!-- update students -->
	<!-- set name=#{name},email=#{email} -->
	<!-- where stud_id=#{stuId} -->
	<!-- </update> -->
	<!-- <delete id="deleteAllStudents"> -->
	<!-- delete from students -->
	<!-- </delete> -->


	<!-- <delete id="deleteStudentById" -->
	<!-- parameterType="int"> -->
	<!-- delete from students -->
	<!-- where stud_id=#{id} -->
	<!-- </delete> -->


	<!-- 添加一个学生包含电话号码 -->
	<!-- <insert id="addStudentWithPhone" -->
	<!-- parameterType="Stu"> -->
	<!-- insert into students(stud_id,name, -->
	<!-- email,dob,phone) -->
	<!-- values(#{stuId},#{name}, -->
	<!-- #{email},#{dob},#{phone}) -->
	<!-- </insert> -->
</mapper>








